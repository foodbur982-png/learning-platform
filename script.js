// --- –ò–ú–ü–û–†–¢ –ò –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ---
import firebaseConfig from './firebase-config.js';

const { 
    initializeApp, 
    getAuth, getFirestore,
    onAuthStateChanged, signInWithEmailAndPassword, signOut, createUserWithEmailAndPassword,
    doc, getDoc, setDoc, collection, getDocs, addDoc, deleteDoc, updateDoc
} = window.firebase;

const app = initializeApp(firebaseConfig);
const auth = getAuth(app);
const db = getFirestore(app);

// --- –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï ---
const loginContainer = document.getElementById('login-container');
const appContainer = document.getElementById('app-container');
const loginForm = document.getElementById('login-form');
const logoutButton = document.getElementById('logout-button');
const contentArea = document.getElementById('content-area');
const userInfoSpan = document.getElementById('user-info');

let currentUser = null;
let usersCache = [];
let coursesCache = [];

// --- THEME TOGGLE ---
const themeToggle = document.getElementById('theme-toggle');
const savedTheme = localStorage.getItem('theme') || 'dark';
document.documentElement.setAttribute('data-theme', savedTheme);
updateThemeIcon();

themeToggle?.addEventListener('click', () => {
    const current = document.documentElement.getAttribute('data-theme');
    const newTheme = current === 'dark' ? 'light' : 'dark';
    document.documentElement.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);
    updateThemeIcon();
});

function updateThemeIcon() {
    const theme = document.documentElement.getAttribute('data-theme');
    if (themeToggle) {
        themeToggle.textContent = theme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
    }
}

// --- NOTIFICATIONS ---
const notifBtn = document.getElementById('notifications-btn');
const notifPanel = document.getElementById('notifications-panel');

notifBtn?.addEventListener('click', () => {
    notifPanel.style.display = notifPanel.style.display === 'none' ? 'block' : 'none';
});

document.querySelector('.close-notif')?.addEventListener('click', () => {
    notifPanel.style.display = 'none';
});

// Close panel when clicking outside
document.addEventListener('click', (e) => {
    if (!e.target.closest('#notifications-btn') && !e.target.closest('#notifications-panel')) {
        if (notifPanel) notifPanel.style.display = 'none';
    }
});

// --- –ì–õ–ê–í–ù–ê–Ø –õ–û–ì–ò–ö–ê (–ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–Ø) ---
onAuthStateChanged(auth, async user => {
    if (user) {
        const userDocRef = doc(db, 'users', user.uid);
        const userDocSnap = await getDoc(userDocRef);
        if (userDocSnap.exists()) {
            currentUser = { uid: user.uid, email: user.email, ...userDocSnap.data() };
            console.log("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª:", currentUser);
            showAppUI();
            renderContentByRole();
        } else {
            console.error("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Firestore.");
            signOut(auth);
        }
    } else {
        currentUser = null;
        console.log("üëã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª.");
        showLoginUI();
    }
});

// --- –õ–û–ì–ò–ö–ê –í–•–û–î–ê –ò –í–´–•–û–î–ê ---
loginForm.addEventListener('submit', async e => {
    e.preventDefault();
    const email = e.target.email.value;
    const password = e.target.password.value;
    const errorEl = document.getElementById('login-error');
    const submitBtn = e.target.querySelector('button[type="submit"]');
    
    errorEl.textContent = '';
    submitBtn.disabled = true;
    submitBtn.textContent = '–í—Ö–æ–¥...';
    
    try {
        await signInWithEmailAndPassword(auth, email, password);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', error);
        errorEl.textContent = '–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å.';
        submitBtn.disabled = false;
        submitBtn.textContent = '–í–æ–π—Ç–∏';
    }
});

logoutButton.addEventListener('click', () => {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?')) {
        signOut(auth);
    }
});

// --- –§–£–ù–ö–¶–ò–ò –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –ò–ù–¢–ï–†–§–ï–ô–°–ê ---
function showLoginUI() {
    loginContainer.style.display = 'flex';
    appContainer.style.display = 'none';
}

function showAppUI() {
    userInfoSpan.textContent = `${currentUser.name} (${currentUser.role})`;
    loginContainer.style.display = 'none';
    appContainer.style.display = 'flex';
}

function renderContentByRole() {
    contentArea.innerHTML = '';
    switch (currentUser.role) {
        case 'admin':
            renderAdminDashboard();
            break;
        case 'mentor':
            renderMentorDashboard();
            break;
        case 'intern':
            renderInternDashboard();
            break;
        default:
            contentArea.innerHTML = `<h1>‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å</h1>`;
    }
}

// --- üëë –°–ï–ö–¶–ò–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê ---
async function renderAdminDashboard() {
    const template = document.getElementById('admin-panel-template');
    contentArea.appendChild(template.content.cloneNode(true));
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    await updateAdminStats();
    
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
    contentArea.querySelector('.tabs').addEventListener('click', e => {
        if (e.target.classList.contains('tab-button')) {
            contentArea.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
            e.target.classList.add('active');
            const tab = e.target.dataset.tab;
            
            switch(tab) {
                case 'users': renderUsersTab(); break;
                case 'courses': renderCoursesTab(); break;
                case 'analytics': renderAnalyticsTab(); break;
                case 'settings': renderSettingsTab(); break;
            }
        }
    });
    
    renderUsersTab();
}

async function updateAdminStats() {
    try {
        const usersSnapshot = await getDocs(collection(db, 'users'));
        const coursesSnapshot = await getDocs(collection(db, 'courses'));
        
        document.getElementById('stat-users').textContent = usersSnapshot.size;
        document.getElementById('stat-courses').textContent = coursesSnapshot.size;
        document.getElementById('stat-progress').textContent = '78%'; // TODO: –†–µ–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    }
}

async function renderUsersTab() {
    const adminContent = contentArea.querySelector('#admin-content');
    adminContent.innerHTML = `
        <div class="controls">
            <button id="add-user-btn" class="btn btn-add">‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</button>
            <input type="text" id="search-users" placeholder="üîç –ü–æ–∏—Å–∫..." 
                   style="padding: 10px; border-radius: 8px; border: 1px solid var(--border-color); 
                   background: var(--background-color); color: var(--text-color); margin-left: 16px; width: 300px;">
        </div>
        <table class="content-table">
            <thead>
                <tr>
                    <th>–ò–º—è</th>
                    <th>Email</th>
                    <th>–†–æ–ª—å</th>
                    <th>–°—Ç–∞—Ç—É—Å</th>
                    <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                </tr>
            </thead>
            <tbody id="users-table-body">
                <tr><td colspan="5" style="text-align: center;">–ó–∞–≥—Ä—É–∑–∫–∞...</td></tr>
            </tbody>
        </table>
        ${getModalHtml('user-modal', '–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')}
    `;

    const usersTableBody = adminContent.querySelector('#users-table-body');
    
    try {
        const usersCollection = collection(db, 'users');
        const userSnapshot = await getDocs(usersCollection);
        usersCache = userSnapshot.docs.map(d => ({ id: d.id, ...d.data() }));
        
        renderUsersTable(usersCache);
        
        // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        document.getElementById('search-users').addEventListener('input', (e) => {
            const query = e.target.value.toLowerCase();
            const filtered = usersCache.filter(u => 
                u.name.toLowerCase().includes(query) || 
                u.email.toLowerCase().includes(query)
            );
            renderUsersTable(filtered);
        });
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
        usersTableBody.innerHTML = '<tr><td colspan="5" style="text-align: center; color: var(--error-color);">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</td></tr>';
    }

    adminContent.querySelector('#add-user-btn').addEventListener('click', showAddUserModal);
}

function renderUsersTable(users) {
    const usersTableBody = document.querySelector('#users-table-body');
    
    if (users.length === 0) {
        usersTableBody.innerHTML = '<tr><td colspan="5" style="text-align: center;">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</td></tr>';
        return;
    }
    
    usersTableBody.innerHTML = users.map(user => `
        <tr>
            <td>${user.name}</td>
            <td>${user.email}</td>
            <td><span class="role-badge">${getRoleText(user.role)}</span></td>
            <td><span class="status-badge ${user.blocked ? 'blocked' : 'active'}">${user.blocked ? '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' : '–ê–∫—Ç–∏–≤–µ–Ω'}</span></td>
            <td>
                <button class="btn-small" onclick="editUser('${user.id}')">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                <button class="btn-small ${user.blocked ? '' : 'btn-danger'}" onclick="toggleBlockUser('${user.id}', ${!user.blocked})">
                    ${user.blocked ? 'üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' : 'üîí –ë–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å'}
                </button>
                <button class="btn-small btn-danger" onclick="deleteUser('${user.id}')">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
            </td>
        </tr>
    `).join('');
}

function getRoleText(role) {
    const roles = {
        admin: 'üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        mentor: 'üßë‚Äçüè´ –ù–∞—Å—Ç–∞–≤–Ω–∏–∫',
        intern: 'üßë‚Äçüíª –°—Ç–∞–∂—ë—Ä'
    };
    return roles[role] || role;
}

function renderCoursesTab() {
    const adminContent = contentArea.querySelector('#admin-content');
    adminContent.innerHTML = `
        <div class="controls">
            <button id="add-course-btn" class="btn btn-add">‚ûï –°–æ–∑–¥–∞—Ç—å –∫—É—Ä—Å</button>
        </div>
        <div class="courses-grid" id="courses-grid">
            <div class="course-card">
                <div class="course-header">
                    <div class="course-icon">üíª</div>
                    <span class="course-badge">–ê–∫—Ç–∏–≤–µ–Ω</span>
                </div>
                <h3>JavaScript Basics</h3>
                <p class="course-desc">–û—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ JavaScript</p>
                <div class="course-stats">
                    <span>üë• 8 —Å—Ç—É–¥–µ–Ω—Ç–æ–≤</span>
                    <span>üìö 12 —É—Ä–æ–∫–æ–≤</span>
                </div>
                <button class="btn btn-small">–£–ø—Ä–∞–≤–ª—è—Ç—å –∫—É—Ä—Å–æ–º</button>
            </div>
            <div class="course-card">
                <div class="course-header">
                    <div class="course-icon">üé®</div>
                    <span class="course-badge">–ê–∫—Ç–∏–≤–µ–Ω</span>
                </div>
                <h3>UI/UX Design</h3>
                <p class="course-desc">–û—Å–Ω–æ–≤—ã –¥–∏–∑–∞–π–Ω–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤</p>
                <div class="course-stats">
                    <span>üë• 4 —Å—Ç—É–¥–µ–Ω—Ç–∞</span>
                    <span>üìö 8 —É—Ä–æ–∫–æ–≤</span>
                </div>
                <button class="btn btn-small">–£–ø—Ä–∞–≤–ª—è—Ç—å –∫—É—Ä—Å–æ–º</button>
            </div>
        </div>
    `;
}

function renderAnalyticsTab() {
    const adminContent = contentArea.querySelector('#admin-content');
    adminContent.innerHTML = `
        <h2>üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</h2>
        <div class="analytics-container">
            <div class="stat-card">
                <h3>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                <p>–°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è: <strong>78%</strong></p>
                <p>–ö—É—Ä—Å—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã: <strong>45/60</strong></p>
                <p>–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç–∞–∂—ë—Ä–æ–≤: <strong>12</strong></p>
            </div>
            <div class="stat-card">
                <h3>–¢–æ–ø –∫—É—Ä—Å–æ–≤</h3>
                <ol style="margin: 0; padding-left: 20px; color: var(--text-light);">
                    <li>JavaScript Basics (8 —Å—Ç—É–¥–µ–Ω—Ç–æ–≤)</li>
                    <li>UI/UX Design (4 —Å—Ç—É–¥–µ–Ω—Ç–∞)</li>
                    <li>Git & GitHub (6 —Å—Ç—É–¥–µ–Ω—Ç–æ–≤)</li>
                </ol>
            </div>
        </div>
        <button class="btn" style="margin-top: 20px; width: auto;">üì• –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç (PDF)</button>
    `;
}

function renderSettingsTab() {
    const adminContent = contentArea.querySelector('#admin-content');
    adminContent.innerHTML = `
        <h2>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã</h2>
        <div class="settings-section">
            <h3>üé® –í–Ω–µ—à–Ω–∏–π –≤–∏–¥</h3>
            <div class="input-group">
                <label>–õ–æ–≥–æ—Ç–∏–ø –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</label>
                <input type="text" placeholder="üéì" style="width: 100px;">
            </div>
            <div class="input-group">
                <label>–ù–∞–∑–≤–∞–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</label>
                <input type="text" value="–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –û–±—É—á–µ–Ω–∏—è">
            </div>
        </div>
        <div class="settings-section" style="margin-top: 24px;">
            <h3>üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
            <button class="btn" style="width: auto;">–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º</button>
        </div>
        <button class="btn btn-add" style="margin-top: 24px; width: auto;">üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</button>
    `;
}

function showAddUserModal() {
    const modal = contentArea.querySelector('#user-modal');
    const modalContent = modal.querySelector('.modal-body');
    modalContent.innerHTML = `
        <form id="add-user-form">
            <div class="input-group">
                <label for="new-name">–ò–º—è *</label>
                <input type="text" id="new-name" required placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤">
            </div>
            <div class="input-group">
                <label for="new-email">Email *</label>
                <input type="email" id="new-email" required placeholder="ivan@company.com">
            </div>
            <div class="input-group">
                <label for="new-password">–ü–∞—Ä–æ–ª—å *</label>
                <input type="password" id="new-password" required minlength="6" placeholder="–ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤">
            </div>
            <div class="input-group">
                <label for="new-role">–†–æ–ª—å *</label>
                <select id="new-role">
                    <option value="intern">üßë‚Äçüíª –°—Ç–∞–∂—ë—Ä</option>
                    <option value="mentor">üßë‚Äçüè´ –ù–∞—Å—Ç–∞–≤–Ω–∏–∫</option>
                    <option value="admin">üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</option>
                </select>
            </div>
            <button type="submit" class="btn">–°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</button>
        </form>
    `;
    modal.style.display = 'flex';

    modal.querySelector('.close-button').onclick = () => modal.style.display = 'none';
    modal.querySelector('#add-user-form').addEventListener('submit', handleCreateUser);
}

async function handleCreateUser(e) {
    e.preventDefault();
    const submitBtn = e.target.querySelector('button[type="submit"]');
    submitBtn.disabled = true;
    submitBtn.textContent = '–°–æ–∑–¥–∞–Ω–∏–µ...';
    
    // TODO: –≠—Ç–æ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤ Cloud Functions
    alert('‚ö†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π –∫–æ–¥ –æ—Ç–∫–ª—é—á–µ–Ω–æ –≤ Firebase –∏–∑-–∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.\n\n–î–ª—è production –Ω—É–∂–Ω–æ:\n1. –°–æ–∑–¥–∞—Ç—å Cloud Function –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\n2. –ò–ª–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ Firebase Console\n\n–ü–æ–∫–∞ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ Firestore.');
    
    const name = document.getElementById('new-name').value;
    const email = document.getElementById('new-email').value;
    const role = document.getElementById('new-role').value;
    
    try {
        // –í—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –≤ Firestore (–±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)
        await setDoc(doc(db, 'users', 'temp_' + Date.now()), {
            name,
            email,
            role,
            blocked: false,
            createdAt: new Date().toISOString()
        });
        
        alert('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Firestore');
        document.querySelector('#user-modal').style.display = 'none';
        renderUsersTab();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        alert('‚ùå –û—à–∏–±–∫–∞: ' + error.message);
    }
    
    submitBtn.disabled = false;
    submitBtn.textContent = '–°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è';
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
window.editUser = (id) => {
    alert('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ' + id);
};

window.toggleBlockUser = async (id, block) => {
    if (confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ ${block ? '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' : '—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å'} —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?`)) {
        try {
            await updateDoc(doc(db, 'users', id), { blocked: block });
            alert(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${block ? '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' : '—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}`);
            renderUsersTab();
        } catch (error) {
            alert('‚ùå –û—à–∏–±–∫–∞: ' + error.message);
        }
    }
};

window.deleteUser = async (id) => {
    if (confirm('‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!')) {
        try {
            await deleteDoc(doc(db, 'users', id));
            alert('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω');
            renderUsersTab();
        } catch (error) {
            alert('‚ùå –û—à–∏–±–∫–∞: ' + error.message);
        }
    }
};

// --- üßë‚Äçüè´ –°–ï–ö–¶–ò–Ø –ù–ê–°–¢–ê–í–ù–ò–ö–ê ---
function renderMentorDashboard() {
    const template = document.getElementById('mentor-panel-template');
    contentArea.appendChild(template.content.cloneNode(true));
    
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞
    contentArea.querySelector('.tabs')?.addEventListener('click', e => {
        if (e.target.classList.contains('tab-button')) {
            contentArea.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
            e.target.classList.add('active');
            const tab = e.target.dataset.tab;
            
            const mentorContent = document.getElementById('mentor-content');
            if (tab === 'my-courses') {
                mentorContent.innerHTML = template.content.querySelector('#mentor-content').innerHTML;
            } else if (tab === 'students') {
                renderMentorStudents();
            } else if (tab === 'check-tasks') {
                renderCheckTasks();
            }
        }
    });
}

function renderMentorStudents() {
    const mentorContent = document.getElementById('mentor-content');
    mentorContent.innerHTML = `
        <h2>üë• –ú–æ–∏ —Å—Ç—É–¥–µ–Ω—Ç—ã</h2>
        <table class="content-table">
            <thead>
                <tr><th>–°—Ç—É–¥–µ–Ω—Ç</th><th>–ö—É—Ä—Å</th><th>–ü—Ä–æ–≥—Ä–µ—Å—Å</th><th>–î–µ–π—Å—Ç–≤–∏—è</th></tr>
            </thead>
            <tbody>
                <tr>
                    <td>–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤</td>
                    <td>JavaScript Basics</td>
                    <td><div class="progress-bar"><div class="progress-fill" style="width: 65%"></div></div> 65%</td>
                    <td><button class="btn-small">–ü—Ä–æ—Å–º–æ—Ç—Ä</button></td>
                </tr>
                <tr>
                    <td>–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞</td>
                    <td>UI/UX Design</td>
                    <td><div class="progress-bar"><div class="progress-fill" style="width: 90%"></div></div> 90%</td>
                    <td><button class="btn-small">–ü—Ä–æ—Å–º–æ—Ç—Ä</button></td>
                </tr>
            </tbody>
        </table>
    `;
}

function renderCheckTasks() {
    const mentorContent = document.getElementById('mentor-content');
    mentorContent.innerHTML = `
        <h2>üìù –ó–∞–¥–∞–Ω–∏—è –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ</h2>
        <div class="tasks-list">
            <div class="task-card">
                <h3>–ó–∞–¥–∞–Ω–∏–µ: –°–æ–∑–¥–∞—Ç—å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä</h3>
                <p><strong>–°—Ç—É–¥–µ–Ω—Ç:</strong> –ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤</p>
                <p><strong>–ö—É—Ä—Å:</strong> JavaScript Basics</p>
                <p><strong>–°–¥–∞–Ω–æ:</strong> 2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥</p>
                <button class="btn btn-small">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
            </div>
        </div>
    `;
}

// --- üßë‚Äçüíª –°–ï–ö–¶–ò–Ø –°–¢–ê–ñ–Å–†–ê ---
function renderInternDashboard() {
    const template = document.getElementById('intern-panel-template');
    contentArea.appendChild(template.content.cloneNode(true));
    
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ —Å—Ç–∞–∂—ë—Ä–∞
    contentArea.querySelector('.tabs')?.addEventListener('click', e => {
        if (e.target.classList.contains('tab-button')) {
            contentArea.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
            e.target.classList.add('active');
            const tab = e.target.dataset.tab;
            
            const internContent = document.getElementById('intern-content');
            if (tab === 'courses') {
                internContent.innerHTML = template.content.querySelector('#intern-content').innerHTML;
            } else if (tab === 'achievements') {
                renderAchievements();
            } else if (tab === 'history') {
                renderHistory();
            }
        }
    });
}

function renderAchievements() {
    const internContent = document.getElementById('intern-content');
    internContent.innerHTML = `
        <h2>üèÜ –ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h2>
        <div class="achievements-grid">
            <div class="achievement-card earned">
                <div class="achievement-icon">üéØ</div>
                <h3>–ü–µ—Ä–≤—ã–π –∫—É—Ä—Å</h3>
                <p>–ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø–µ—Ä–≤—ã–π –∫—É—Ä—Å</p>
            </div>
            <div class="achievement-card earned">
                <div class="achievement-icon">‚≠ê</div>
                <h3>–û—Ç–ª–∏—á–Ω–∏–∫</h3>
                <p>–ü–æ–ª—É—á–∏—Ç–µ 90+ –±–∞–ª–ª–æ–≤</p>
            </div>
            <div class="achievement-card">
                <div class="achievement-icon locked">üîí</div>
                <h3>–ú–∞—Ä–∞—Ñ–æ–Ω–µ—Ü</h3>
                <p>–ó–∞–≤–µ—Ä—à–∏—Ç–µ 5 –∫—É—Ä—Å–æ–≤</p>
            </div>
        </div>
    `;
}

function renderHistory() {
    const internContent = document.getElementById('intern-content');
    internContent.innerHTML = `
        <h2>üìú –ò—Å—Ç–æ—Ä–∏—è –æ–±—É—á–µ–Ω–∏—è</h2>
        <div class="history-timeline">
            <div class="history-item">
                <div class="history-date">–°–µ–≥–æ–¥–Ω—è</div>
                <div class="history-content">
                    <h3>–£—Ä–æ–∫ –∑–∞–≤–µ—Ä—à—ë–Ω: "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ JS"</h3>
                    <p>JavaScript Basics</p>
                </div>
            </div>
            <div class="history-item">
                <div class="history-date">–í—á–µ—Ä–∞</div>
                <div class="history-content">
                    <h3>–¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: "HTML –û—Å–Ω–æ–≤—ã"</h3>
                    <p>–†–µ–∑—É–ª—å—Ç–∞—Ç: 95/100 ‚≠ê</p>
                </div>
            </div>
        </div>
    `;
}

// --- –•–ï–õ–ü–ï–†–´ ---
function getModalHtml(id, title) {
    return `
    <div id="${id}" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>${title}</h2>
                <span class="close-button">&times;</span>
            </div>
            <div class="modal-body"></div>
        </div>
    </div>
    `;
}

console.log('üöÄ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
