// --- –ò–ú–ü–û–†–¢ –ò –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ---
import firebaseConfig from './firebase-config.js';

const { 
    initializeApp, 
    getAuth, getFirestore,
    onAuthStateChanged, signInWithEmailAndPassword, signOut, createUserWithEmailAndPassword,
    doc, getDoc, setDoc, collection, getDocs, addDoc, deleteDoc, updateDoc
} = window.firebase;

const app = initializeApp(firebaseConfig);
const auth = getAuth(app);
const db = getFirestore(app);

// --- –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï –ò –°–°–´–õ–ö–ò –ù–ê –≠–õ–ï–ú–ï–ù–¢–´ ---
const loginContainer = document.getElementById('login-container');
const appContainer = document.getElementById('app-container');
const loginForm = document.getElementById('login-form');
const logoutButton = document.getElementById('logout-button');
const contentArea = document.getElementById('content-area');
const userInfoSpan = document.getElementById('user-info');

let currentUser = null; // –•—Ä–∞–Ω–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
let usersCache = []; // –ö—ç—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∞–¥–º–∏–Ω–∫–∏

// --- –ì–õ–ê–í–ù–ê–Ø –õ–û–ì–ò–ö–ê (–°–õ–£–®–ê–¢–ï–õ–¨ –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò) ---
onAuthStateChanged(auth, async user => {
    if (user) {
        const userDocRef = doc(db, 'users', user.uid);
        const userDocSnap = await getDoc(userDocRef);
        if (userDocSnap.exists()) {
            currentUser = { uid: user.uid, email: user.email, ...userDocSnap.data() };
            console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª:", currentUser);
            showAppUI();
            renderContentByRole();
        } else {
            console.error("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Firestore.");
            signOut(auth);
        }
    } else {
        currentUser = null;
        console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª.");
        showLoginUI();
    }
});

// --- –õ–û–ì–ò–ö–ê –í–•–û–î–ê –ò –í–´–•–û–î–ê ---
loginForm.addEventListener('submit', async e => {
    e.preventDefault();
    const email = e.target.email.value;
    const password = e.target.password.value;
    const errorEl = document.getElementById('login-error');
    errorEl.textContent = '';
    try {
        await signInWithEmailAndPassword(auth, email, password);
    } catch (error) {
        errorEl.textContent = '–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å.';
    }
});

logoutButton.addEventListener('click', () => signOut(auth));

// --- –§–£–ù–ö–¶–ò–ò –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –ò–ù–¢–ï–†–§–ï–ô–°–ê ---
function showLoginUI() {
    loginContainer.style.display = 'flex';
    appContainer.style.display = 'none';
}

function showAppUI() {
    userInfoSpan.textContent = `${currentUser.name} (${currentUser.role})`;
    loginContainer.style.display = 'none';
    appContainer.style.display = 'flex';
}

function renderContentByRole() {
    contentArea.innerHTML = '';
    switch (currentUser.role) {
        case 'admin':
            renderAdminDashboard();
            break;
        case 'mentor':
            renderMentorDashboard();
            break;
        case 'intern':
            renderInternDashboard();
            break;
        default:
            contentArea.innerHTML = `<h1>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å</h1>`;
    }
}

// --- üëë –°–ï–ö–¶–ò–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê ---
function renderAdminDashboard() {
    const template = document.getElementById('admin-panel-template');
    contentArea.appendChild(template.content.cloneNode(true));
    
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
    contentArea.querySelector('.tabs').addEventListener('click', e => {
        if (e.target.classList.contains('tab-button')) {
            contentArea.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
            e.target.classList.add('active');
            const tab = e.target.dataset.tab;
            if (tab === 'users') renderUsersTab();
            if (tab === 'courses') renderCoursesTab();
        }
    });
    renderUsersTab(); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤–∫–ª–∞–¥–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
}

async function renderUsersTab() {
    const adminContent = contentArea.querySelector('#admin-content');
    adminContent.innerHTML = `
        <div class="controls">
            <button id="add-user-btn" class="btn btn-add">–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</button>
        </div>
        <table class="content-table">
            <thead><tr><th>–ò–º—è</th><th>Email</th><th>–†–æ–ª—å</th><th>–î–µ–π—Å—Ç–≤–∏—è</th></tr></thead>
            <tbody id="users-table-body"><tr><td colspan="4">–ó–∞–≥—Ä—É–∑–∫–∞...</td></tr></tbody>
        </table>
        ${getModalHtml('user-modal', '–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')}
    `;

    const usersTableBody = adminContent.querySelector('#users-table-body');
    const usersCollection = collection(db, 'users');
    const userSnapshot = await getDocs(usersCollection);
    usersCache = userSnapshot.docs.map(d => ({ id: d.id, ...d.data() }));
    
    usersTableBody.innerHTML = usersCache.map(user => `
        <tr>
            <td>${user.name}</td>
            <td>${user.email}</td>
            <td>${user.role}</td>
            <td>
                <button class="btn-small btn-danger" data-id="${user.id}">–£–¥–∞–ª–∏—Ç—å</button>
            </td>
        </tr>
    `).join('');

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    adminContent.querySelector('#add-user-btn').addEventListener('click', showAddUserModal);
}

function renderCoursesTab() {
    contentArea.querySelector('#admin-content').innerHTML = `<h2>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞–º–∏ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)</h2>`;
}

function showAddUserModal() {
    const modal = contentArea.querySelector('#user-modal');
    const modalContent = modal.querySelector('.modal-body');
    modalContent.innerHTML = `
        <form id="add-user-form">
            <div class="input-group">
                <label for="new-name">–ò–º—è</label>
                <input type="text" id="new-name" required>
            </div>
            <div class="input-group">
                <label for="new-email">Email</label>
                <input type="email" id="new-email" required>
            </div>
            <div class="input-group">
                <label for="new-password">–ü–∞—Ä–æ–ª—å</label>
                <input type="password" id="new-password" required>
            </div>
            <div class="input-group">
                <label for="new-role">–†–æ–ª—å</label>
                <select id="new-role">
                    <option value="intern">–°—Ç–∞–∂—ë—Ä</option>
                    <option value="mentor">–ù–∞—Å—Ç–∞–≤–Ω–∏–∫</option>
                </select>
            </div>
            <button type="submit" class="btn">–°–æ–∑–¥–∞—Ç—å</button>
        </form>
    `;
    modal.style.display = 'flex';

    modal.querySelector('.close-button').onclick = () => modal.style.display = 'none';
    modal.querySelector('#add-user-form').addEventListener('submit', handleCreateUser);
}

async function handleCreateUser(e) {
    e.preventDefault();
    alert('–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π –∫–æ–¥ –æ—Ç–∫–ª—é—á–µ–Ω–æ –≤ Firebase –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑-–∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –≠—Ç—É –ª–æ–≥–∏–∫—É –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤ Cloud Functions. –ü–æ–∫–∞ —á—Ç–æ –¥–æ–±–∞–≤–ª—è–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å Firebase.');
    // TODO: Implement user creation via Cloud Functions
}

// --- üßë‚Äçüè´ –°–ï–ö–¶–ò–Ø –ù–ê–°–¢–ê–í–ù–ò–ö–ê ---
function renderMentorDashboard() {
    const template = document.getElementById('mentor-panel-template');
    contentArea.appendChild(template.content.cloneNode(true));
}

// --- üßë‚Äçüíª –°–ï–ö–¶–ò–Ø –°–¢–ê–ñ–Å–†–ê ---
function renderInternDashboard() {
    const template = document.getElementById('intern-panel-template');
    contentArea.appendChild(template.content.cloneNode(true));
}

// --- –•–ï–õ–ü–ï–†–´ ---
function getModalHtml(id, title) {
    return `
    <div id="${id}" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>${title}</h2>
                <span class="close-button">&times;</span>
            </div>
            <div class="modal-body"></div>
        </div>
    </div>
    `;
}
